<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
                           http://www.springframework.org/schema/context
	                       http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <context:component-scan base-package="app.core" />



    <bean id="sessionFactory" name="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="configLocation">
            <value>
                /WEB-INF/hbn.xml
            </value>
        </property>

        <property name="packagesToScan"> <!-- be aware : spring and hbn seem to mess up about this -->
            <value>
                app.core.business.model.mapping
            </value>
        </property>
    </bean>

<!--

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <tx:annotation-driven proxy-target-class="true"
                          transaction-manager="transactionManager" /> -->

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/">
        </property>
        <property name="suffix" value=".jsp">
        </property>
    </bean>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="fr" />
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/public/"
                   cache-period="31556926"/>

    <!--<mvc:annotation-driven ignore-default-model-on-redirect="true" message-codes-resolver="org.springframework.http.converter.json.GsonHttpMessageConverter"/>-->

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/resources/**"/>
            <mvc:exclude-mapping path="/error"/>
            <bean class="app.core.web.logic.interceptor.GlobalInterceptor"/>
        </mvc:interceptor>
    <!--    <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/resources/**"/>
            <mvc:exclude-mapping path="/error"/>
            <bean class="app.core.web.logic.interceptor.HbnSessionInterceptor"/>
        </mvc:interceptor> -->
    </mvc:interceptors>

    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">file</prop>
                <prop key="file.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.FileResourceLoader
                </prop>
                <prop key="file.resource.loader.cache">false</prop>
            </props>
        </property>
        <property name="resourceLoaderPath" value="/WEB-INF/resources/private/velocity/" />
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="587" />
        <property name="username" value="$email_address" />
        <property name="password" value="$email_pwd" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
    </bean>


    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="100000"/>
    </bean>

    <!-- this is a template messageCode that we can pre-load with default state -->
    <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="alexandre.masanes@gmail.com"/>
    </bean>

    <context:property-placeholder location="classpath*:validation.properties,
                                            classpath*:service.properties"/>


    <bean id="gson" class="com.google.gson.Gson"/>

    <mvc:annotation-driven ignore-default-model-on-redirect="true">
        <mvc:message-converters>
            <bean id="messageConverter" class="org.springframework.http.converter.json.GsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
</beans>

